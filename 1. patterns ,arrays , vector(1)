// #include <iostream> ;
// using namespace std ;

// int main() {
//   for( ; ; )
// }





// pattern - 1 
// #include <iostream>  ;
// using namespace  std ;

// int main(){
//   int n ; 
//   cout << "Enter the number " ;
//   cin  >> n ;
//   for (int i = 0 ; i < n ; i = i+1)
//     {
//       for (int j = 0 ; j<n ; j = j+1 )
//         {
//           if (i== 0 || i == n-1 || j==0 || j ==n-1)
//           {
//             cout << "*" ; 
//           }else
//           {
//             cout << " " ; 
//           }
          
//         }
//   cout << endl ; 
//     }
// }









// pattern- 2
// #include <iostream>;
// using namespace  std ; 
// int main(){
// int n ;
// cout << "Enter the number";
// cin >> n ; 
  
// for (int i = 0 ; i < n ; i = i+1 ) 
//   {
//     for (int j = 0 ; j<i+1 ; j= j+1)
//       {
//         cout << "*" ; 
//       }
//     cout << endl ;
//   }
// }







//pattern-3
// #include <iostream> ;
// using namespace std ;

// int main(){
//   int n ; 
//   cout << "Enter the number";
//   cin >> n ; 
//   for (int i = 0 ; i< n ; i=i+1)
//     {
//       for (int j = 0 ;j < n-i ; j= j+1 )
//         {
//         cout << "*" ; 
//         }
//       cout << endl; 
//     }
// }





// //pattern - 4 
// #include <iostream> ;
// using namespace std ; 
// int main() {
//   int n ;
//   cout << "Enter the number N ";
//   cin >> n ; 
//   for (int i = 0 ; i < n ; i = i + 1)
//     {
//       for ( int j = 0 ; j < i+1 ; j = j+1 )
//         {
//           cout << j+1 ;
//         }
//       cout << endl ; 
//     }
// }






// //pattern - 5 
// #include <iostream> ;
// using namespace std ; 

// int main() {
//   int n ;
//   cout << "enter the number N " ;
//   cin >> n ; 
//   for (int i = 0 ; i < n ; i = i + 1 )
//     {
//       for (int j = 0 ; j< n-i ; j = j+1 )
//         {
//           cout << j+1 ; 
//         }
//       cout << endl; 
//     }
// }




//numeric pallindrome equilateral  Pyramid 
// #include <iostream> ;
// using namespace std;

// int main(){
//   int n ; 
//   cin >> n ; 
//   int k = n ;
//   for (int i = 0 ; i < n ; i++){
//     int c = 1; 
//     for (int j =0 ; j<k ; j++){
//       if (j<n-i-1){
//         cout << " ";
//       }
//       else if ( j <= n-1 ){
//         cout << c;
//         c++; 
//       }
//       else if (j == n ){
//         c = c-2 ;
//         cout << c ; 
//         c--; 
//       }
//       else {
//         cout << c ;
//         c-- ; 
//       }

//     }
//     k++; 
//     cout << endl ; 
//   }
// }

----------------------------------------------------------------------------------------------
//lecture -43 
//--> ek cheez humesha yaad rkhna ki jab bhi hum arr ko pass krenge to uska size bhi humesha pass krna pdega 

// #include "iostream";
// using namespace std;

// void printArray(int arr[], int size ){
//   for (int i = 0 ; i<size ; i++){
//     cout << arr[i] << " " ;
//   }
//   cout << endl ; 
// }

// void inc(int arr[] , int size ){
//   arr[0] = arr[0]+ 10 ; 
//   printArray(arr , size);
// }
// int main(){
//   int arr[] = {5,6};
//   int size = 2 ;
//   inc(arr,size);
//   printArray(arr,size);

//   //dono jagah 15,6 answer aa rha idhar to pass by reference wala concept lag rha he 
  
// }
----------------------------------------------------------------------------------
//q-2 arrays and functions ka 

// #include "iostream";
// using namespace std;


// bool find(int arr[] , int size , int key){
//   for(int i = 0 ; i<size ; i++){
//     if (arr[i] == key){
//       return true;
//     }
//       return false;
    
//   }
// }

// int main(){
  
//   int arr[5] = {1,3,5,7,8};
//   int size = 5 ; 
//   cout << "ENter the key to find" << endl ; 

//   int key ; 
//   cin >> key ;

//   if(find(arr, size , key)){
//     cout << "found" << endl ; 
    
//   }else{
    
// cout << "not found" ;
//   }
  
// }
--------------------------------------------------------------------------------
//upar ka right answer nahi aa rha tha to ye 
// #include<iostream>
// using namespace std;
// bool findElement(int arr[],int size,int key){
//     for(int i = 0;i<size;i++){ // Traversing the array
//         if(arr[i]==key){ // Comparing key with each element
//             return true; // If found then return true and exit from function
//         }
//     }
//     return false; // If traversed all the elements and not found, then return false and exit from function
// }
// int main(){
//     int arr[] = {2,9,6,7,4,12,15};
//     int size = 7;
//     cout << "ENter the key you want to find" ; 
//     int key;
//     cin >> key;
//     if(findElement(arr,size,key)){ // calling the boolean function
//         cout<<"Found element"; // condition true then just cout found element
//     }
//     else{
//         cout<<"Not Found"; // condition false
//     }
//     return 0;
// }

--------------------------------------------------------------------------------
//q-3

// #include "iostream";
// using namespace std;
// int main(){
  
// int arr[10] = {0,0,0,0,1,0,1,0,1,0};
// int size = 10 ;

// int zeros = 0;
// int ones = 0;

// for(int i=0 ; i < size ; i++){
//   if(arr[i]== 0){
//     zeros = zeros+1;
//   }else if( arr[i]==1){
//     ones = ones+1;
//   }
  
// }
//   cout << "zeros : " << zeros << endl ;
//   cout << "ones : " << ones << endl ;
  
// }
---------------------------------------------------------------------------------
//q-4 ;
// #include "iostream";
// using namespace std;
// #include <limits.h>;
// int main(){ 
//   int arr[] = {2,3,5,6,22,5,21,5,6};
//   int size = 9 ;
//   int max = INT_MIN;
//   int min = INT_MAX; 
//   for(int i = 0 ; i<size ; i++){
//     if(arr[i]> max ){
//       max = arr[i]; 
//     }
//     if(arr[i]< min ){
//       min = arr[i]; 
//     }
//   }
//   cout << "maximum number is ; " << max << endl ;
//   cout << "minimum number is ; " << min << endl ;
// }
----------------------------------------------------------------------------------------
//q-5  extreme prints
// #include "iostream";
// using namespace std;
// int main(){
//   int arr[] = {10,20,30,40,50,60,70,80} ; 
//   int size = 8 ;
//   int start = 0 ;
//   int end = size-1;
//   while(true){
//     if(start > end){
//       break;
//     }
//     if(start == end){
//       cout<< arr[start];
//     }

//     cout << arr[start] << " ";
//     cout << arr[end] << " ";
//     start++;
//     end--;
    
//   }
  
  
// }



----------------------------------------------------------------------------
//q-6  reverse an array 
// #include "iostream";
// using namespace std;


// int main(){
//   int arr[8] = {10,20,30,40,50,60,70,80} ;
//   int size = 8;


//   int start = 0 ;
//   int end = size - 1;
//   while(start <= end){
//     swap(arr[start],arr[end]);
//     start++;
//     end--;
//   }

// for(int i = 0 ; i<size ; i++){
//   cout << arr[i] << " ";
// }
// }





-------------------------------------------------------------------------------------------------
//lecture -2 arrays
//vector dynamic he 
//vector <int> arr;
//arr.size() -->kitne element store kiye hein, arr.capacity()--> kitne element store kr skte hein max, arr.empty() , arr.push_back(5) , arr.pop_back(5)
// #include "iostream";
// #include "vector";
// using namespace std;


// int main(){
//   vector <int> arr;
//   int ans = (sizeof(arr)/sizeof(int)) ;
//   cout << ans << endl;

//   cout << arr.size() << endl;
//   cout << arr.capacity() << endl;

// //insert
//   arr.push_back(5);
//   arr.push_back(4);

//  for(int i = 0 ; i< arr.size() ; i++){
//    cout<< arr[i] << " "<< endl ;
//  }
// cout<< "after pop " << endl ;
// //pop
//   arr.pop_back();
//   for(int i = 0 ; i< arr.size() ; i++){
//     cout << arr[i] << " " << endl;
//   }


// //alag tareeke se vector likhna
//   // vector <int> brr(10);
//   vector <int> brr(4,-2);
//   cout << brr.size() << endl;
//   cout << brr.capacity() << endl ;
//   for (int i = 0 ; i< brr.size() ; i++){
//     cout << brr[i] << " " ;
  
//   }
// cout << endl ;
// //3rd way to initialize vector
//  vector <int> crr{12,3,4,5,6,7,7};
//   for(int i = 0 ; i< crr.size() ; i++){
//     cout << crr[i] << " "; 
//   }
  
//   return 0;

// }












------------------------------------//finding unique number from an array ;
#include <iostream>
#include <vector>
using namespace std;


int findUnique(vector <int> arr){
  int ans = 0 ;
  for (int i = 0 ; i< arr.size() ; i++){
    ans = ans ^ arr[i] ; 
  }
  return ans ;
  }

int main() {
  int n ;
  cout << "enter how many numbers ";
  cin >> n ; 

  vector <int> arr(n);
  cout << "Enter the elements " << endl ;
  for (int i =0 ; i< arr.size() ; i++){
    cin >> arr[i] ;
  }

  int uniqueElement = findUnique(arr);
  cout << "Unique Element is " << uniqueElement << endl;
}




-----------------------------Union of two Arrays ---------------------
#include <iostream>
#include <vector>
using namespace std;


int main() {
 int arr[] = {2,4,5,6,4};
  int sizea = 5;
  int brr[] = {77,43,44,33};
  int sizeb = 4 ;
  vector <int> ans ;
  for(int i =0 ; i<sizea ; i++){
    ans.push_back(arr[i]) ;
  }

  for(int i =0 ; i<sizeb ; i++){
    ans.push_back(brr[i]) ;
  }
 

  for(int i =0 ; i<ans.size() ; i++){
    cout << ans[i] << " ";
  }
  
}




---------------------------Intersection of 2 arrays --------------------------------

#include <iostream>
#include <vector>
using namespace std;


int main() {
vector <int> arr{1,2,3,4,5,6,7} ;
  vector<int> brr{3,49,10,4} ;
  vector <int> ans ;

  for(int i =0 ; i< arr.size () ; i++){
    int element = arr[i]; 
    for(int j = 0 ; j<brr.size() ; j++){
      if(element ==brr[j]){
        //mark karado kyonki agar do baar element diye honge array me to wo do baar print hoga 
        brr[j] = -1 ; 
        ans.push_back(element) ;
      }
    }
  }

  for(auto value : ans ){
    cout << value << " " ; 
  }

  
}


-------------------------pair sum with doublet in single array -----------
#include <iostream>
#include <vector>
using namespace std;


int main() {
vector <int> arr{10,20,30,40,50,60,70} ;
  int sum = 80 ; 
for (int i = 0 ; i<arr.size() ; i++){
  int element = arr[i] ;

  for(int j = i+1 ; i<arr.size() ; j++){
    if(element + arr[j] == sum){
      cout << "Pair found" << element << "," << arr[j] << endl;
    }
  }
}
  

  
}





-----------------------------------sum with triplet -----------------------
#include <iostream>
#include <vector>
using namespace std;


int main() {
vector <int> arr{10,20,30,40} ;

for (int i = 0 ; i<arr.size() ; i++){
  int element1 = arr[i] ;
  int sum = 80; 

  for(int j = i+1 ; i<arr.size() ; j++){
    int element2 = arr[j] ;
    for(int k=j+1 ; k<arr.size() ; k++){
      int element3 = arr[k];

      if (element1 + element2 + element3 == sum){
        cout << element1 << "," << element2 << "," << element3  << endl ;
      }
    }
  
  }
  

}  
}

